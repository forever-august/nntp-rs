name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        features:
          - ""
          - "tokio-runtime"
          - "async-std-runtime"
          - "smol-runtime"
          - "all-runtimes"

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache key differentiated by features
        key: ${{ matrix.features }}

    - name: Build
      run: cargo build --verbose --features "${{ matrix.features }}"

    - name: Run tests
      run: cargo test --verbose --features "${{ matrix.features }}"

  fmt:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt

    - name: Check formatting
      run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: clippy

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Run clippy (no features)
      run: cargo clippy --all-targets -- -D warnings

    - name: Run clippy (all features)
      run: cargo clippy --all-targets --features all-runtimes -- -D warnings

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Build documentation
      run: cargo doc --no-deps --all-features
      env:
        RUSTDOCFLAGS: -D warnings

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Install cargo-tarpaulin
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-tarpaulin

    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust 1.75.0
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: 1.75.0

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Check MSRV
      run: cargo check --all-features